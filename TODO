@high:
    ✔ initialize the project --> generate the package.json @done(24-04-08 10:31)
    ✔ configure the package.json @started(24-04-08 10:31) @done(24-04-08 10:56) @lasted(25m49s)
    ✔ inizilize the tsc --> generate the tsconfig.json @started(24-04-08 10:31) @done(24-04-08 10:57) @lasted(26m)
    ✔ configure the tsconfig.json @started(24-04-08 10:31) @done(24-04-08 10:57) @lasted(26m6s)
    ✔ create src dir in the main root of your project @started(24-04-08 10:31) @done(24-04-08 11:06) @lasted(35m46s)
    ✔ create an app.ts file in src, with the link to different routes on it @done(24-04-08 11:06)
    ✔ create a server.ts file in src, with a link with the acessPort and database port @done(24-04-08 11:11)
    ✔ create an env.ts file in src, that contains the sensible variables useful to developers @done(24-04-08 12:13)

    
@high: use Zod?
    ✔ create different branches regarding to every task; @done(24-04-08 14:23)
    ✔ create entities validations; @started(24-04-08 16:38) @done(24-04-08 17:06) @lasted(28m50s)
    ☐ create interfaces from validations; @started(24-04-08 16:38)
    ☐ create models from interfaces; @started(24-04-08 16:38)
    ☐ create routes; @started(24-04-08 16:38)
    ☐ create services; @started(24-04-08 16:38)
    ☐ create controllers; @started(24-04-08 16:38)
    
@high: product
    ☐ create product logic @started(24-04-08 15:28)
    
@high: api/product routes
    ✔ retrieve all products (get) @started(24-04-08 16:38) @done(24-04-08 17:05) @lasted(27m53s)
    ✔ retrieve product by id (get) @started(24-04-08 16:38) @done(24-04-08 17:05) @lasted(27m56s)
    ☐ permit to Admin to add a new product (post) @started(24-04-08 16:38)
    ☐ permit to Admin to update an existing product info (put) @started(24-04-08 16:38)
    ☐ permit to Admin to delete a product (delete) @started(24-04-08 16:38)
    
@high: api/cart routes
    ☐ retrieve a user cart in the current situation (get)
    ☐ add a product to a user cart (post)
    ☐ remove a product from a cart (delete)
    ☐ empty a user cart (delete)
    
@high: api/order routes
    ☐ retrieve User order list (get); optional: layout
    ☐ permit to User to create a new order from his cart
    ☐ retrieve a single order by id (get)
    ☐ permit to Admin to update the order status (put)
    ☐ permit to Admin to delete  the order (delete)
    
@high: user
        ☐ create user logic (interface, model, service, controller)
    
@high: api/auth routes
        ☐ register User (post) @started(24-04-08 14:38)
        ☐ register Admin, with a whitelist logic (post) @started(24-04-08 15:00)
        ☐ User/ Admin login (post) @started(24-04-08 15:00)
        ☐ User/ Admin logout (get) @started(24-04-08 15:01)
        ☐ User/ Admin auth info (get) @started(24-04-08 15:01)
    
@high: auth services
    ☐ find user by email: use the user email to do some check stuff
    ☐ update status: update the status of the logged user
    